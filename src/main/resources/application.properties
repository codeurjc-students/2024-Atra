spring.application.name=ATRA

########################## SECURITY ##########################
#server.port = 8443
## Defines the path to the keystore.jks file that stores the SSL key and certificate
#server.ssl.key-store = classpath:keystore.jks
## Defines the password that will be used to decode the keystore.jks
#server.ssl.key-store-password = password
## Defines the password that will be used to decode the key inside the keystore.jks
#server.ssl.key-password = secret
## The passwords would be safer inside an environment variable. You can create one in the Dockerfile or docker-compose.
## Alternatively, for development, "you might use a .env file with a library like dotenv to load variables", making sure it is included in the .gitignore

########################## DATABASE ##########################
# Database connection
spring.datasource.url=jdbc:mysql://localhost:3306/ATRA?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=password

# Manage what happens with the DB when launching the app. This saves me the hassle of manually updating the Schema
spring.jpa.hibernate.ddl-auto=create-drop

########################## AUTHENTICATION ##########################
# This is used (mainly) to authenticate API requests
jwt.secret=just_a_secret_nothing_more_but_it_needs_to_be_32_characters_long

########################## LOGGING ##########################
# (by default logging goes to console. We could implement a logback-spring.xml to redirect it elsewhere)
# Web
logging.level.org.springframework.web=DEBUG
# Security
logging.level.org.springframework.security=DEBUG
# SQL
    #logging.level.org.hibernate.SQL=DEBUG
    #logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#Makes sure the logs have proper formatting
    #spring.jpa.properties.hibernate.format_sql=true

########################## INCREASE FILE SIZE ##########################
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
